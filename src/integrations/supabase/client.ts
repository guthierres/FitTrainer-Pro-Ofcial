// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://hznkaddifujgchqlvqsb.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imh6bmthZGRpZnVqZ2NocWx2cXNiIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTcwNzM2MjAsImV4cCI6MjA3MjY0OTYyMH0._b5NiAqeD0R4Xrj9VzUMCKsFW0YOgC6Gwg4ecD4XXXM";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
  },
  global: {
    headers: {
      'x-client-info': 'fittrainer-pro@1.0.0',
    },
  },
});

// Helper function to set student context for public access
export const setStudentContext = async (studentNumber?: string, studentToken?: string) => {
  if (studentNumber || studentToken) {
    const claims = {
      ...(studentNumber && { student_number: studentNumber }),
      ...(studentToken && { student_token: studentToken })
    };
    
    // Set JWT claims for RLS policies
    await supabase.auth.setSession({
      access_token: createCustomJWT(claims),
      refresh_token: ''
    });
  }
};

// Helper function to create a custom JWT for student context
const createCustomJWT = (claims: any) => {
  // Create a simple JWT-like token for RLS context
  const header = btoa(JSON.stringify({ alg: 'none', typ: 'JWT' }));
  const payload = btoa(JSON.stringify({ 
    ...claims,
    iss: 'fittrainer-pro',
    aud: 'authenticated',
    exp: Math.floor(Date.now() / 1000) + 3600 // 1 hour
  }));
  return `${header}.${payload}.`;
};